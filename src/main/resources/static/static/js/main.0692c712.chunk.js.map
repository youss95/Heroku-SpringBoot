{"version":3,"sources":["store.js","layout/Header.js","components/Projects/ProjectItem.js","components/Tasks/TaskItems.js","components/Tasks/ProjectTask.js","components/Tasks/AddTaskForm.js","components/Tasks/UpdateTaskForm.js","components/Todo/AddTodoForm.js","components/Todo/TodoItems.js","components/Todo/Todo.js","components/Todo/UpdateTodo.js","components/users/LoginForm.js","components/users/RegisterForm.js","components/map/MarkerMap.js","components/map/MyMap.js","components/map/AddMapInfo.js","components/users/Bye.js","components/map/DeleteForm.js","layout/Body.js","App.js","index.js"],"names":["LOGIN","login","type","LOGOUT","initstate","isLogin","reducer","state","action","Header","useSelector","store","dispatch","useDispatch","useState","userId","setUsername","useEffect","jwtTokenTemp","localStorage","getItem","jwtToken","replace","jwt_decode","id","className","to","onClick","removeItem","window","location","href","ProjectItem","withRouter","props","task","projectName","content","endDate","startDate","confirm","axios","delete","then","res","data","history","push","alert","catch","err","ProjectTask","category","match","params","setTask","nothing","setNothing","get","length","map","AddTaskForm","nullNameCheck","setNullNameCheck","nullContCheck","setNullContCheck","changeValue","e","target","name","value","onSubmit","preventDefault","post","headers","errorName","response","undefined","placeholder","onChange","class","cols","rows","disabled","UpdateTaskForm","put","AddTodoForm","title","priority","status","todo","setTodo","todoCheck","setTodoCheck","contentCheck","setContentCheck","priorityCheck","setPriorityCheck","statusCheck","setStatusCheck","priorityColor","task_id","Todo","readyItems","ingItems","doneItems","todos","i","UpdateTodo","updateTodo","setUpdateTodo","LoginForm","username","password","user","setUser","Form","Group","Label","Control","Button","variant","fetch","method","body","JSON","stringify","entries","header","setItem","text","JoinForm","confirmedPassword","nullUsernameCheck","setUsernameCheck","nullPwCheck","setPwCheck","userExistCheck","setExistCheck","errMsg","MarkerMap","style","width","height","kakao","MyMap","mapList","setList","rerender","setrender","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","Map","geocoder","services","Geocoder","list","addressSearch","address","result","Status","OK","coords","y","x","marker","Marker","position","clickable","setMap","infowindow","InfoWindow","bizName","interviewDate","removable","event","addListener","open","AddMapInfo","findAddress","findAddr","setFind","clickedAdd","setAdd","nullAddCheck","setAddCheck","nullConCheck","setConCheck","setNameCheck","setCenter","zindex","searchAddrFromCoords","callback","coord2RegionCode","getLng","getLat","displayCenterInfo","getCenter","mouseEvent","latLng","detailAddr","road_address","address_name","setPosition","setContent","coord2Address","Bye","DeleteForm","Body","src","frameborder","allow","allowfullscreen","console","log","path","exact","component","RegisterForm","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0692c712.chunk.js","sourcesContent":["const LOGIN = 'LOGIN';\r\nexport const login = () => ({ type: LOGIN });\r\nconst LOGOUT = 'LOGOUT';\r\nexport const logout = () => ({ type: LOGOUT });\r\n\r\nconst initstate = {\r\n  isLogin: false,\r\n};\r\n\r\nconst reducer = (state = initstate, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return { isLogin: true };\r\n    case LOGOUT:\r\n      return { isLogin: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/style.css';\r\nimport { logout } from '../store';\r\nimport jwt_decode from 'jwt-decode';\r\nconst Header = () => {\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n  const dispatch = useDispatch();\r\n  //console.log(isLogin);\r\n  const [userId, setUsername] = useState();\r\n\r\n  useEffect(() => {\r\n    let jwtTokenTemp = localStorage.getItem('Authorization');\r\n    //console.log('s1', jwtTokenTemp);\r\n\r\n    if (jwtTokenTemp) {\r\n      let jwtToken = jwtTokenTemp.replace('Bearer ', '');\r\n      setUsername(jwt_decode(jwtToken).id);\r\n    }\r\n  }, []);\r\n\r\n  const logoutProc = () => {\r\n    localStorage.removeItem('Authorization');\r\n\r\n    dispatch(logout());\r\n    window.location.href = '/';\r\n  };\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <span className=\"logo\">\r\n          <Link to={'/'}>ToBe Employed</Link>\r\n        </span>\r\n        <div className=\"gnb\">\r\n          <ul className=\"clear\">\r\n            <li className=\"has\">\r\n              <Link to={'/todo'}>할 일</Link>\r\n            </li>\r\n            <li className=\"has\">\r\n              <Link to={`/map/${userId}`}>Map</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"utils\">\r\n          <ul className=\"clear\">\r\n            {isLogin ? (\r\n              <>\r\n                <li>\r\n                  <Link onClick={logoutProc}>로그아웃</Link>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li>\r\n                  <Link to={`/user/login`}>로그인</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={`/user/register`}>회원가입</Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"s_menu_bg\"></div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { BsFillLayersFill, BsGraphUp, BsPen, BsPencil } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/projectItem.css';\r\nimport jwt_decode from 'jwt-decode';\r\nconst ProjectItem = () => {\r\n  const [userId, setUsername] = useState();\r\n\r\n  useEffect(() => {\r\n    let jwtTokenTemp = localStorage.getItem('Authorization');\r\n\r\n    if (jwtTokenTemp) {\r\n      let jwtToken = jwtTokenTemp.replace('Bearer ', '');\r\n      setUsername(jwt_decode(jwtToken).id);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"backGround\">\r\n      <div className=\"pItem\">\r\n        <div className=\"categoryTitle\">Category</div>\r\n        <div className=\"row col-48 rCard \">\r\n          <div className=\"card col-6 eCard\">\r\n            <div className=\"card-body bCard\">\r\n              <h5 className=\"card-title\">\r\n                Work <BsFillLayersFill />\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                make a simple to-do list about work !!\r\n              </p>\r\n              <Link to={`/todo/work/${userId}`} className=\"btn btn-primary\">\r\n                일정 보기\r\n              </Link>\r\n              <Link to={'/addTask/work'} className=\"btn btn-primary\">\r\n                일정 추가\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card col-6 eCard\">\r\n            <div className=\"card-body bCard\">\r\n              <h5 className=\"card-title\">\r\n                Learning <BsPen />\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                make a simple to-do list about learning something useful !!\r\n              </p>\r\n              <Link to={`/todo/learning/${userId}`} className=\"btn btn-primary\">\r\n                일정 보기\r\n              </Link>\r\n              <Link to={'/addTask/learning'} className=\"btn btn-primary\">\r\n                일정 추가\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card col-6 eCard\">\r\n            <div className=\"card-body bCard\">\r\n              <h5 className=\"card-title\">\r\n                Study <BsPencil />\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                make a simple to-do list about studying something to upgrade\r\n                your knowledge !!\r\n              </p>\r\n              <Link to={`/todo/study/${userId}`} className=\"btn btn-primary\">\r\n                일정 보기\r\n              </Link>\r\n              <Link to={'/addTask/study'} className=\"btn btn-primary\">\r\n                일정 추가\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"card col-6 eCard\">\r\n            <div className=\"card-body bCard\">\r\n              <h5 className=\"card-title\">\r\n                Fitness <BsGraphUp />\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                make a simple to-do list about fitness to build your body and\r\n                mind more strong !!\r\n              </p>\r\n              <Link to={`/todo/fitness/${userId}`} className=\"btn btn-primary\">\r\n                일정 보기\r\n              </Link>\r\n              <Link to={'/addTask/fitness'} className=\"btn btn-primary\">\r\n                일정 추가\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectItem;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport {\r\n  BsFillBackspaceFill,\r\n  BsArrow90DegLeft,\r\n  BsPencil,\r\n  BsGearFill,\r\n} from 'react-icons/bs';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport '../../css/taskItem.css';\r\nconst TaskItems = (props) => {\r\n  const { projectName, content, startDate, endDate, id } = props.task;\r\n\r\n  const deleteTask = () => {\r\n    if (window.confirm('정말로 삭제하시겠습니까?')) {\r\n      axios\r\n        .delete(`https://tobedeployed.herokuapp.com/api/task/${id}`)\r\n        .then((res) => {\r\n          //console.log(res.data);\r\n          if (res.data === 'deleted') {\r\n            props.history.push('/todo');\r\n          } else {\r\n            alert('삭제 실패');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          alert('에러');\r\n          //console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"taskItem\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title\">{projectName}</h3>\r\n          <p className=\"card-text\">{content}</p>\r\n          <div>끝: {endDate}</div>\r\n          <div className=\"doBtn\">\r\n            <Link to={`/list/detail/${id}`} className=\"btn\">\r\n              일정 <BsArrow90DegLeft />\r\n            </Link>\r\n            <Link to={`/addTodo/${id}`} className=\"btn\">\r\n              생성 <BsPencil />\r\n            </Link>\r\n            <Link to={`/updateTask/${id}`} className=\"btn\">\r\n              수정 <BsGearFill />\r\n            </Link>\r\n            <span to=\"#\" className=\"btn\" onClick={deleteTask}>\r\n              삭제 <BsFillBackspaceFill />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TaskItems);\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../css/task.css';\r\nimport TaskItems from './TaskItems';\r\nimport { useSelector } from 'react-redux';\r\nconst ProjectTask = (props) => {\r\n  const category = props.match.params.category;\r\n  const userId = props.match.params.userId;\r\n  const [task, setTask] = useState([]);\r\n  const [nothing, setNothing] = useState(false);\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      alert('로그인을 해주세요!');\r\n      //props.history.push('/user/login');\r\n    }\r\n    axios\r\n      .get(`https://tobedeployed.herokuapp.com/api/task/${category}/${userId}`)\r\n      .then((res) => {\r\n        //console.log('data', res.data);\r\n        if (res.data.length === 0) {\r\n          setNothing(true);\r\n        } else if (res.data.length !== 0) {\r\n          setNothing(false);\r\n        }\r\n        setTask(res.data);\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"prjTask\">\r\n      {nothing && <h2>주제를 추가해 주세요!!</h2>}\r\n      {task.map((task) => (\r\n        <TaskItems key={task.id} task={task} userId={userId} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTask;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../css/AddTaskForm.css';\r\nimport jwt_decode from 'jwt-decode';\r\nconst AddTaskForm = (props) => {\r\n  const category = props.match.params.category;\r\n\r\n  const [task, setTask] = useState({\r\n    projectName: '',\r\n    content: '',\r\n    category: category,\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n\r\n  const [nullNameCheck, setNullNameCheck] = useState(false);\r\n  const [nullContCheck, setNullContCheck] = useState(false);\r\n  const changeValue = (e) => {\r\n    setTask({\r\n      ...task,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [userId, setUsername] = useState();\r\n\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n\r\n  useEffect(() => {\r\n    let jwtTokenTemp = localStorage.getItem('Authorization');\r\n\r\n    if (jwtTokenTemp) {\r\n      let jwtToken = jwtTokenTemp.replace('Bearer ', '');\r\n      setUsername(jwt_decode(jwtToken).id);\r\n    }\r\n    if (!isLogin) {\r\n      alert('로그인을 해주세요!');\r\n      props.history.push('/todo');\r\n    }\r\n  }, []);\r\n\r\n  const submitTask = (e) => {\r\n    e.preventDefault();\r\n    if (!task.projectName) {\r\n      //alert('프로젝트 이름이 필요합니다.');\r\n      setNullNameCheck(true);\r\n    } else if (task.projectName !== null) {\r\n      setNullNameCheck(false);\r\n    }\r\n    if (!task.content) {\r\n      setNullContCheck(true);\r\n    } else if (task.content !== null) {\r\n      setNullContCheck(false);\r\n    }\r\n    const headers = {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    };\r\n    axios\r\n      .post('https://tobedeployed.herokuapp.com/api/task/' + userId, task, {\r\n        headers,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setTask(res.data);\r\n        props.history.push('/todo');\r\n      })\r\n      .catch((err) => {\r\n        let errorName = err.response.data;\r\n        //console.log(errorName.projectName);\r\n\r\n        if (errorName.projectName === undefined) {\r\n          alert(errorName.content);\r\n        } else {\r\n          alert(errorName.projectName);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"addForm\">\r\n        <h3>일정을 추가해 주세요!!</h3>\r\n        <br />\r\n        <form onSubmit={submitTask}>\r\n          <dt>프로젝트 이름</dt>\r\n          <input\r\n            type=\"text\"\r\n            className=\"inpform\"\r\n            placeholder=\"Placeholder\"\r\n            name=\"projectName\"\r\n            onChange={changeValue}\r\n          />\r\n          {nullNameCheck && (\r\n            <div className=\"nullCheck\">이름을 입력해 주세요</div>\r\n          )}\r\n          <dt>내용</dt>\r\n\r\n          <textarea\r\n            class=\"txtareaform\"\r\n            name=\"content\"\r\n            id=\"\"\r\n            cols=\"30\"\r\n            rows=\"4\"\r\n            placeholder=\"내용을 입력해 주세요!\"\r\n            onChange={changeValue}\r\n          />\r\n          {nullContCheck && (\r\n            <div className=\"nullCheck\">내용을 입력해 주세요</div>\r\n          )}\r\n          <dt>카테고리</dt>\r\n          <input\r\n            type=\"text\"\r\n            className=\"inpform\"\r\n            placeholder=\"Placeholder\"\r\n            value={category}\r\n            name=\"category\"\r\n            disabled\r\n          />\r\n          <dt>start</dt>\r\n          <div className=\"startDate\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"inpform\"\r\n              name=\"startDate\"\r\n              onChange={changeValue}\r\n            />\r\n          </div>\r\n          <dt>end</dt>\r\n          <div className=\"startDate\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"inpform\"\r\n              name=\"endDate\"\r\n              onChange={changeValue}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-lg subBtn\"\r\n            value=\"등록\"\r\n          />\r\n        </form>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../css/updateTask.css';\r\nconst UpdateTaskForm = (props) => {\r\n  const [task, setTask] = useState({\r\n    projectName: '',\r\n    content: '',\r\n    category: '',\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n  const id = props.match.params.id;\r\n\r\n  const [nullNameCheck, setNullNameCheck] = useState(false);\r\n  const [nullContCheck, setNullContCheck] = useState(false);\r\n\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      alert('로그인을 해주세요!');\r\n      props.history.push('/user/login');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://tobedeployed.herokuapp.com/api/task/chosen/' + id)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setTask(res.data);\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const changeValue = (e) => {\r\n    setTask({\r\n      ...task,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const submitTask = (e) => {\r\n    e.preventDefault();\r\n    if (!task.projectName) {\r\n      //alert('프로젝트 이름이 필요합니다.');\r\n      setNullNameCheck(true);\r\n    } else if (task.projectName !== null) {\r\n      setNullNameCheck(false);\r\n    }\r\n    if (!task.content) {\r\n      setNullContCheck(true);\r\n    } else if (task.content !== null) {\r\n      setNullContCheck(false);\r\n    }\r\n    const headers = {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    };\r\n    axios\r\n      .put('https://tobedeployed.herokuapp.com/api/task/' + id, task, {\r\n        headers,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setTask(res.data);\r\n        props.history.push(`/todo/`);\r\n      })\r\n      .catch((err) => {\r\n        let errorName = err.response.data;\r\n        if (errorName.projectName === undefined) {\r\n          alert(errorName.content);\r\n        } else {\r\n          alert(errorName.projectName);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"updateTask\">\r\n      <h3>수정</h3>\r\n      <br />\r\n      <form onSubmit={submitTask}>\r\n        <dt>프로젝트 이름</dt>\r\n        <input\r\n          type=\"text\"\r\n          className=\"inpform\"\r\n          placeholder=\"Placeholder\"\r\n          name=\"projectName\"\r\n          onChange={changeValue}\r\n          value={task.projectName}\r\n        />\r\n        {nullNameCheck && <div className=\"nullCheck\">이름을 입력해 주세요</div>}\r\n        <dt>내용</dt>\r\n\r\n        <textarea\r\n          class=\"txtareaform\"\r\n          name=\"content\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"내용을 입력해 주세요!\"\r\n          value={task.content}\r\n          onChange={changeValue}\r\n        />\r\n        {nullContCheck && <div className=\"nullCheck\">내용을 입력해 주세요</div>}\r\n        <dt>카테고리</dt>\r\n        <input\r\n          type=\"text\"\r\n          className=\"inpform\"\r\n          placeholder=\"Placeholder\"\r\n          value={task.category}\r\n          name=\"category\"\r\n          disabled\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-lg subBtn\"\r\n          value=\"등록\"\r\n        />\r\n      </form>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTaskForm;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../css/AddTodoForm.css';\r\nconst AddTodoForm = (props) => {\r\n  const id = props.match.params.id;\r\n\r\n  const [todo, setTodo] = useState({\r\n    title: '',\r\n    content: '',\r\n    priority: '',\r\n    status: '',\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n  const [todoCheck, setTodoCheck] = useState(false);\r\n  const [contentCheck, setContentCheck] = useState(false);\r\n  const [priorityCheck, setPriorityCheck] = useState(false);\r\n  const [statusCheck, setStatusCheck] = useState(false);\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      alert('로그인을 해주세요!');\r\n      props.history.push('/user/login');\r\n    }\r\n  }, []);\r\n\r\n  const changeValue = (e) => {\r\n    setTodo({\r\n      ...todo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const submitTodo = (e) => {\r\n    e.preventDefault();\r\n    if (!todo.title) {\r\n      setTodoCheck(true);\r\n    } else if (todo.title !== null) {\r\n      setTodoCheck(false);\r\n    }\r\n    if (!todo.content) {\r\n      setContentCheck(true);\r\n    } else if (todo.content !== null) {\r\n      setContentCheck(false);\r\n    }\r\n    if (!todo.priority) {\r\n      setPriorityCheck(true);\r\n    } else if (todo.priority !== null) {\r\n      setPriorityCheck(false);\r\n    }\r\n    if (!todo.status) {\r\n      setStatusCheck(true);\r\n    } else if (todo.status !== null) {\r\n      setStatusCheck(false);\r\n    }\r\n    const headers = {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    };\r\n    axios\r\n      .post(`https://tobedeployed.herokuapp.com/api/todo/${id}`, todo, {\r\n        headers,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setTodo(res.data);\r\n        props.history.push(`/list/detail/${id}`);\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n        //console.log(err.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"addTodo\">\r\n      <h3>일정을 추가해 주세요!</h3>\r\n      <br />\r\n      <form onSubmit={submitTodo}>\r\n        <dt>What to do</dt>\r\n        <input\r\n          type=\"text\"\r\n          className=\"inpform\"\r\n          placeholder=\"어떤 일을 하시겠습니까?\"\r\n          name=\"title\"\r\n          onChange={changeValue}\r\n        />\r\n        {todoCheck && <div>빈칸은 안되요</div>}\r\n        <dt>내용</dt>\r\n        <textarea\r\n          className=\"txtareaform\"\r\n          name=\"content\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"내용을 입력해 주세요!\"\r\n          onChange={changeValue}\r\n        />\r\n        {contentCheck && <div>내용을 입력해 주세요</div>}\r\n        <dt>우선순위</dt>\r\n        <dd>\r\n          <div className=\"inp_slct\">\r\n            <select className=\"priority\" name=\"priority\" onChange={changeValue}>\r\n              <option value=\"\">선택</option>\r\n              <option value={1}>1(높음)</option>\r\n              <option value={2}>2(중간)</option>\r\n              <option value={3}>3(낮음)</option>\r\n            </select>\r\n          </div>\r\n        </dd>\r\n        {priorityCheck && <div>우선순위를 선택해 주세요</div>}\r\n        <dt>진행상황</dt>\r\n        <dd>\r\n          <div className=\"inp_slct\">\r\n            <select className=\"status\" name=\"status\" onChange={changeValue}>\r\n              <option value=\"\">선택</option>\r\n              <option value=\"todo\">준비</option>\r\n              <option value=\"ing\">진행중</option>\r\n              <option value=\"done\">끝</option>\r\n            </select>\r\n          </div>\r\n        </dd>\r\n        {statusCheck && <div>진행상황을 선택해 주세요</div>}\r\n        <dt>start</dt>\r\n        <div className=\"startDate\">\r\n          <input\r\n            type=\"date\"\r\n            className=\"inpform\"\r\n            name=\"startDate\"\r\n            onChange={changeValue}\r\n          />\r\n        </div>\r\n        <dt>end</dt>\r\n        <div className=\"startDate\">\r\n          <input\r\n            type=\"date\"\r\n            className=\"inpform\"\r\n            name=\"endDate\"\r\n            onChange={changeValue}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-lg subBtn\"\r\n          value=\"추가\"\r\n        />\r\n      </form>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport '../../css/TodoItem.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { BsFillBackspaceFill, BsGearFill } from 'react-icons/bs';\r\n\r\nconst TodoItems = (props) => {\r\n  const { id, content, status, priority, startDate, endDate, title } =\r\n    props.todo;\r\n  let priorityColor;\r\n  if (priority === 1) {\r\n    priorityColor = 'text-red';\r\n  } else if (priority === 2) {\r\n    priorityColor = 'text-blue';\r\n  } else {\r\n    priorityColor = 'text-black';\r\n  }\r\n  const deleteTodo = () => {\r\n    if (window.confirm('정말로 삭제 하시겠습니까?')) {\r\n      axios\r\n        .delete(\r\n          `https://tobedeployed.herokuapp.com/api/todo/${props.task_id}/${id}`,\r\n        )\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            window.location.replace(`/list/detail/${props.task_id}`);\r\n          } else {\r\n            alert('삭제에 실패');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          //console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <div className=\"todoItem todoHeader \">\r\n        <div className={`${priorityColor}`}>우선순위 : {priority}</div>\r\n        <div className=\"card-body \">\r\n          <div className=\"todoTitle\">{title}</div>\r\n          <p className=\"card-text text-truncate \">{content}</p>\r\n          <div className=\"due\">\r\n            시작: {startDate} 마침: {endDate}\r\n          </div>\r\n          <div className=\"updateAndDel\">\r\n            <Link\r\n              to={`/todo/update/${props.task_id}/${id}`}\r\n              className=\"updateBtn\"\r\n            >\r\n              수정 <BsGearFill />\r\n            </Link>\r\n\r\n            <button to=\"\" className=\"deleteBtn\" onClick={deleteTodo}>\r\n              삭제 <BsFillBackspaceFill />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TodoItems);\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../css/Todo.css';\r\nimport TodoItems from './TodoItems';\r\nconst Todo = (props) => {\r\n  const id = props.match.params.id;\r\n  let readyItems = [];\r\n  let ingItems = [];\r\n  let doneItems = [];\r\n\r\n  const [todo, setTodo] = useState([]);\r\n\r\n  const todos = todo.map((todo) => (\r\n    <TodoItems key={todo.id} todo={todo} task_id={id} />\r\n  ));\r\n\r\n  for (let i = 0; i < todos.length; i++) {\r\n    //console.log(todos[i].props.todo.status);\r\n    if (todos[i].props.todo.status === 'todo') {\r\n      readyItems.push(todos[i]);\r\n    } else if (todos[i].props.todo.status === 'ing') {\r\n      ingItems.push(todos[i]);\r\n    } else {\r\n      doneItems.push(todos[i]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://tobedeployed.herokuapp.com/api/todo/' + id)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setTodo(res.data);\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\" circle\">준비</div>\r\n            {readyItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"circle\">할 일</div>\r\n            {ingItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"circle\">끝</div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../css/UpdateTodoForm.css';\r\nimport { useSelector } from 'react-redux';\r\nconst UpdateTodo = (props) => {\r\n  const task_id = props.match.params.task_id;\r\n  const id = props.match.params.id;\r\n\r\n  const [updateTodo, setUpdateTodo] = useState({\r\n    title: '',\r\n    content: '',\r\n    priority: '',\r\n    status: '',\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n\r\n  const [todoCheck, setTodoCheck] = useState(false);\r\n  const [contentCheck, setContentCheck] = useState(false);\r\n  const [priorityCheck, setPriorityCheck] = useState(false);\r\n  const [statusCheck, setStatusCheck] = useState(false);\r\n\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      alert('로그인을 해주세요!');\r\n      props.history.push('/user/login');\r\n    }\r\n  }, []);\r\n\r\n  const changeValue = (e) => {\r\n    setUpdateTodo({\r\n      ...updateTodo,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    //console.log(updateTodo.priority);\r\n  };\r\n\r\n  const submitUpdate = (e) => {\r\n    e.preventDefault();\r\n    if (!updateTodo.title) {\r\n      setTodoCheck(true);\r\n    } else if (updateTodo.title !== null) {\r\n      setTodoCheck(false);\r\n    }\r\n    if (!updateTodo.content) {\r\n      setContentCheck(true);\r\n    } else if (updateTodo.content !== null) {\r\n      setContentCheck(false);\r\n    }\r\n    if (!updateTodo.priority) {\r\n      setPriorityCheck(true);\r\n    } else if (updateTodo.priority !== null) {\r\n      setPriorityCheck(false);\r\n    }\r\n    if (!updateTodo.status) {\r\n      setStatusCheck(true);\r\n    } else if (updateTodo.status !== null) {\r\n      setStatusCheck(false);\r\n    }\r\n    const headers = {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    };\r\n    axios\r\n      .put(\r\n        `https://tobedeployed.herokuapp.com/api/todo/update/${task_id}/${id}`,\r\n        updateTodo,\r\n        {\r\n          headers,\r\n        },\r\n      )\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setUpdateTodo(res.data);\r\n        props.history.push('/list/detail/' + task_id);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://tobedeployed.herokuapp.com/api/todo/${task_id}/${id}`)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setUpdateTodo(res.data);\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"updateTodoForm\">\r\n      <h3>수정</h3>\r\n      <br />\r\n      <form onSubmit={submitUpdate}>\r\n        <dt>제목</dt>\r\n        <input\r\n          type=\"text\"\r\n          className=\"inpform\"\r\n          placeholder=\"Placeholder\"\r\n          name=\"title\"\r\n          onChange={changeValue}\r\n          value={updateTodo.title}\r\n        />\r\n        {todoCheck && <div>빈칸은 안되요</div>}\r\n        <dt>내용</dt>\r\n\r\n        <textarea\r\n          class=\"txtareaform\"\r\n          name=\"content\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"4\"\r\n          placeholder=\"내용을 입력해 주세요!\"\r\n          onChange={changeValue}\r\n          value={updateTodo.content}\r\n        />\r\n        {contentCheck && <div>내용을 입력해 주세요</div>}\r\n        <dt>우선순위</dt>\r\n        <dd>\r\n          <div class=\"inp_slct\">\r\n            <select\r\n              className=\"priority\"\r\n              name=\"priority\"\r\n              onChange={changeValue}\r\n              value={updateTodo.priority}\r\n            >\r\n              <option value=\"\">선택</option>\r\n              <option value={1}>1(높음)</option>\r\n              <option value={2}>2(중간)</option>\r\n              <option value={3}>3(낮음)</option>\r\n            </select>\r\n          </div>\r\n        </dd>\r\n        {priorityCheck && <div>우선순위를 선택해 주세요</div>}\r\n        <dt>진행상황</dt>\r\n        <dd>\r\n          <div class=\"inp_slct\">\r\n            <select\r\n              className=\"status\"\r\n              name=\"status\"\r\n              onChange={changeValue}\r\n              value={updateTodo.status}\r\n            >\r\n              <option value=\"\">선택</option>\r\n              <option value=\"todo\">준비</option>\r\n              <option value=\"ing\">진행중</option>\r\n              <option value=\"done\">끝</option>\r\n            </select>\r\n          </div>\r\n        </dd>\r\n        {statusCheck && <div>진행상황을 선택해 주세요</div>}\r\n        <dt>시작</dt>\r\n        <div className=\"startDate\">\r\n          <input\r\n            type=\"date\"\r\n            className=\"inpform\"\r\n            name=\"startDate\"\r\n            onChange={changeValue}\r\n            value={updateTodo.startDate}\r\n          />\r\n        </div>\r\n        <dt>끝</dt>\r\n        <div className=\"startDate\">\r\n          <input\r\n            type=\"date\"\r\n            className=\"inpform\"\r\n            name=\"endDate\"\r\n            onChange={changeValue}\r\n            value={updateTodo.endDate}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-lg subBtn\"\r\n          value=\"수정\"\r\n        />\r\n      </form>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTodo;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../store';\r\nimport '../../css/LoginForm.css';\r\nconst LoginForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const changeValue = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const submitLogin = (e) => {\r\n    e.preventDefault();\r\n    fetch('https://tobedeployed.herokuapp.com/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((res) => {\r\n        // 로컬 스토리지 저장\r\n        for (let header of res.headers.entries()) {\r\n          if (header[0] === 'authorization') {\r\n            localStorage.setItem('Authorization', header[1]);\r\n          }\r\n        }\r\n\r\n        return res.text();\r\n      })\r\n      .then((res) => {\r\n        if (res === 'ok') {\r\n          // 로그인 상태 값 리덕스 저장\r\n          dispatch(login());\r\n          window.location.replace('/');\r\n        } else {\r\n          alert('아이디 혹은 비번을 다시 입력하세요!');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"loginForm\">\r\n      <Form.Group>\r\n        <Form.Label>아이디</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"아이디 입력\"\r\n          name=\"username\"\r\n          onChange={changeValue}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"비밀번호 입력\"\r\n          name=\"password\"\r\n          onChange={changeValue}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\" onClick={submitLogin}>\r\n        로그인\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../../css/LoginForm.css';\r\nconst JoinForm = (props) => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    password: '',\r\n    confirmedPassword: '',\r\n  });\r\n\r\n  const [nullUsernameCheck, setUsernameCheck] = useState(false);\r\n  const [nullPwCheck, setPwCheck] = useState(false);\r\n  const [userExistCheck, setExistCheck] = useState(false);\r\n  const userExist = () => {\r\n    axios\r\n      .post(`https://tobedeployed.herokuapp.com/exist/${user.username}`)\r\n      .then((res) => {\r\n        if (res.data == true) {\r\n          alert('중복된 아이디!!');\r\n          setExistCheck(false);\r\n        } else if (res.data == false) {\r\n          alert('사용가능한 아이디');\r\n          setExistCheck(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  const submitJoin = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      user.password !== user.confirmedPassword &&\r\n      user.confirmedPassword !== null\r\n    ) {\r\n      alert('비밀번호 확인이 틀립니다.');\r\n      return;\r\n    }\r\n    if (!user.username) {\r\n      setUsernameCheck(true);\r\n    } else if (user.username !== null) {\r\n      setUsernameCheck(false);\r\n    }\r\n    if (!user.password) {\r\n      setPwCheck(true);\r\n    } else if (user.password !== null) {\r\n      setPwCheck(false);\r\n    }\r\n    if (user.password.length > 8 || user.password.length < 4) {\r\n      alert('비밀번호는 4~8자 사이');\r\n      return;\r\n    }\r\n    if (userExistCheck == false) {\r\n      alert('아이디 중복체크를 확인바랍니다.');\r\n      return;\r\n    }\r\n\r\n    const headers = {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    };\r\n    axios\r\n      .post('https://tobedeployed.herokuapp.com/join', user, { headers })\r\n      .then((res) => {\r\n        //console.log(res);\r\n        setUser(res.data);\r\n        props.history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        let errMsg = err.response.data;\r\n        if (user.username.length > 8 || user.username.length < 4) {\r\n          alert(errMsg.username);\r\n        }\r\n      });\r\n  };\r\n\r\n  const changeValue = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"loginForm\">\r\n      <Form.Group>\r\n        <Form.Label>아이디</Form.Label>{' '}\r\n        <Button onClick={userExist}>중복확인</Button>\r\n        <Form.Control\r\n          className=\"formCont\"\r\n          type=\"text\"\r\n          placeholder=\"아이디는 4~8자여야 합니다\"\r\n          name=\"username\"\r\n          onChange={changeValue}\r\n        />\r\n        {nullUsernameCheck && <div>id를 입력해 주세요</div>}\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"비밀번호는 4~8자여야 합니다.\"\r\n          name=\"password\"\r\n          onChange={changeValue}\r\n        />\r\n        {nullPwCheck && <div>비밀번호를 입력해 주세요</div>}\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>비밀번호 확인</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          name=\"confirmedPassword\"\r\n          onChange={changeValue}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\" onClick={submitJoin}>\r\n        회원가입\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default JoinForm;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst MarkerMap = (props) => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"map\"\r\n        id=\"map\"\r\n        style={{ width: '1300px', height: '800px' }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkerMap;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/mymap.css';\r\nimport MarkerMap from './MarkerMap';\r\n\r\nconst { kakao } = window;\r\nconst MyMap = (props) => {\r\n  const userId = props.match.params.userId;\r\n  const [mapList, setList] = useState([]);\r\n  const [rerender, setrender] = useState(false);\r\n  const isLogin = useSelector((store) => store.isLogin);\r\n\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      alert('로그인을 해주세요!');\r\n      props.history.push('/user/login');\r\n    }\r\n  }, []);\r\n\r\n  const clickRender = () => {\r\n    if (rerender === true) {\r\n      setrender(false);\r\n    } else if (rerender === false) {\r\n      setrender(true);\r\n    }\r\n  };\r\n\r\n  const clickSearch = () => {\r\n    alert('수정 중...');\r\n  };\r\n\r\n  useEffect(() => {\r\n    //get으로 불러와서\r\n    /* 이부분은 주소대로 카카오 마커에 찍고 누르면 정보 나옴 */\r\n    /*    for (let i = 0; i < mapList.length; i++) {\r\n      listData.push([\r\n        mapList[i].address,\r\n        mapList[i].bizName,\r\n        mapList[i].interviewDate,\r\n        mapList[i].content,\r\n      ]);\r\n    } */\r\n    //console.log(rerender);\r\n\r\n    axios\r\n      .get(`https://tobedeployed.herokuapp.com/api/map/${userId}`)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setList(res.data);\r\n      })\r\n      .then(() => {\r\n        //console.log('sd', mapList[0].address);\r\n        //console.log('df', mapList);\r\n        //console.log('ld', listData);\r\n        // 맵을 넣을 div\r\n\r\n        var mapContainer = document.getElementById('map');\r\n        var mapOption = {\r\n          center: new kakao.maps.LatLng(37.566826, 126.9786567),\r\n          level: 8,\r\n        };\r\n        // 맵 표시\r\n        var map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n        //markerPosition = new kakao.maps.LatLng(37.54699, 127.09598); // 마커가 표시될 위치입니다\r\n\r\n        // 주소 -> 좌표 변환 라이브러리\r\n        const geocoder = new kakao.maps.services.Geocoder();\r\n        // foreach loop\r\n        mapList.map((list) =>\r\n          geocoder.addressSearch(list.address, function (result, status) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n              var marker = new kakao.maps.Marker({\r\n                position: coords,\r\n\r\n                clickable: true,\r\n              });\r\n              // 마커를 지도에 표시합니다.\r\n              marker.setMap(map);\r\n              // 인포윈도우를 생성합니다\r\n\r\n              //listData를 여기다가 바인딩\r\n              var infowindow = new kakao.maps.InfoWindow({\r\n                content:\r\n                  '<div style=\"width:300px;height:200px;padding:15px;\">' +\r\n                  '<span style=\"font-size:17px;font-weight:600;\">회사명: </span>' +\r\n                  list.bizName +\r\n                  '<br>' +\r\n                  '<span style=\"font-size:17px;font-weight:600;\">날짜: </span>' +\r\n                  list.interviewDate +\r\n                  '<br>' +\r\n                  '<span style=\"font-size:17px;font-weight:600;\">피드백: </span>' +\r\n                  list.content +\r\n                  '<br>' +\r\n                  /*  '<a href=\"/map/deleteForm/' +\r\n                  list.id +\r\n                  '\">삭제하러 가기</a>' + */\r\n                  '</div>',\r\n                removable: true,\r\n              });\r\n\r\n              // 마커에 클릭이벤트를 등록합니다\r\n              kakao.maps.event.addListener(marker, 'click', function () {\r\n                // 마커 위에 인포윈도우를 표시합니다\r\n                infowindow.open(map, marker);\r\n              });\r\n            }\r\n          }),\r\n        );\r\n      });\r\n  }, [rerender]);\r\n\r\n  return (\r\n    <div className=\"mymap\">\r\n      <div className=\"searchInput\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"inpform\"\r\n          placeholder=\"주소를 검색해 보세요\"\r\n        />{' '}\r\n        <Button onClick={clickSearch}>검색</Button>\r\n        <Button onClick={clickRender}>마커보기 </Button>\r\n        <Link class=\"btn btn-primary\" to={`/mapInfo/add`}>\r\n          추가\r\n        </Link>\r\n      </div>\r\n      <MarkerMap />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMap;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../../css/addmap.css';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nconst { kakao } = window;\r\n\r\nconst AddMapInfo = (props) => {\r\n  const [findAddr, setFind] = useState({\r\n    findAddress: '',\r\n  });\r\n  const [clickedAdd, setAdd] = useState({\r\n    content: '',\r\n    bizName: '',\r\n    interviewDate: '',\r\n    address: '',\r\n  });\r\n\r\n  const [nullAddCheck, setAddCheck] = useState(false);\r\n  const [nullConCheck, setConCheck] = useState(false);\r\n  const [nullNameCheck, setNameCheck] = useState(false);\r\n  const [userId, setUsername] = useState();\r\n  const changeValue = (e) => {\r\n    setAdd({\r\n      ...clickedAdd,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const changeAdd = (e) => {\r\n    setFind({\r\n      ...findAddr,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let jwtTokenTemp = localStorage.getItem('Authorization');\r\n    let jwtToken = jwtTokenTemp.replace('Bearer ', '');\r\n\r\n    setUsername(jwt_decode(jwtToken).id);\r\n  }, []);\r\n\r\n  const submitMap = (e) => {\r\n    e.preventDefault();\r\n    if (!clickedAdd.address) {\r\n      setAddCheck(true);\r\n    } else if (clickedAdd.address !== null) {\r\n      setAddCheck(false);\r\n    }\r\n    if (!clickedAdd.bizName) {\r\n      setNameCheck(true);\r\n    } else if (clickedAdd.bizName !== null) {\r\n      setNameCheck(false);\r\n    }\r\n    if (!clickedAdd.content) {\r\n      setConCheck(true);\r\n    } else if (clickedAdd.content !== null) {\r\n      setConCheck(false);\r\n    }\r\n    const headers = {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    };\r\n    axios\r\n      .post(\r\n        `https://tobedeployed.herokuapp.com/api/map/${userId}`,\r\n        clickedAdd,\r\n        { headers },\r\n      )\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setAdd(res.data);\r\n        props.history.push(`/map/${userId}`);\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  };\r\n\r\n  //주소검색\r\n  const findAdd = () => {\r\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div\r\n      mapOption = {\r\n        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n        level: 2, // 지도의 확대 레벨\r\n      };\r\n\r\n    var map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n    var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    geocoder.addressSearch(findAddr.findAddress, function (result, status) {\r\n      // 정상적으로 검색이 완료됐으면\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n        // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n\r\n        infowindow.open(map, marker);\r\n\r\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n        map.setCenter(coords);\r\n      }\r\n    });\r\n\r\n    var marker = new kakao.maps.Marker(),\r\n      infowindow = new kakao.maps.InfoWindow({ zindex: 1 });\r\n\r\n    searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n\r\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\r\n      searchDetailAddrFromCoords(mouseEvent.latLng, function (result, status) {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          var detailAddr = !!result[0].road_address\r\n            ? '<div>도로명주소 : ' +\r\n              result[0].road_address.address_name +\r\n              '</div>'\r\n            : '';\r\n          detailAddr +=\r\n            '<div>지번 주소 : ' + result[0].address.address_name + '</div>';\r\n\r\n          var content =\r\n            '<div class=\"bAddr\">' +\r\n            '<span class=\"title\">선택한 주소</span>' +\r\n            detailAddr +\r\n            '</div>';\r\n\r\n          // console.log('지번주소:', result[0].address.address_name);\r\n          let address = result[0].address.address_name;\r\n          setAdd({ ...clickedAdd, address: address });\r\n\r\n          marker.setPosition(mouseEvent.latLng);\r\n          marker.setMap(map);\r\n\r\n          infowindow.setContent(content);\r\n          infowindow.open(map, marker);\r\n        }\r\n      });\r\n    });\r\n\r\n    kakao.maps.event.addListener(map, 'idle', function () {\r\n      searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n    });\r\n\r\n    function searchAddrFromCoords(coords, callback) {\r\n      geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);\r\n    }\r\n\r\n    function searchDetailAddrFromCoords(coords, callback) {\r\n      geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);\r\n    }\r\n\r\n    function displayCenterInfo(result, status) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        var infoDiv = document.getElementById('centerAddr');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div\r\n      mapOption = {\r\n        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n        level: 2, // 지도의 확대 레벨\r\n      };\r\n\r\n    var map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n    var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    geocoder.addressSearch('아리랑로5길 111', function (result, status) {\r\n      // 정상적으로 검색이 완료됐으면\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n        // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n\r\n        infowindow.open(map, marker);\r\n\r\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n        map.setCenter(coords);\r\n      }\r\n    });\r\n\r\n    var marker = new kakao.maps.Marker(),\r\n      infowindow = new kakao.maps.InfoWindow({ zindex: 1 });\r\n\r\n    searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n\r\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\r\n      searchDetailAddrFromCoords(mouseEvent.latLng, function (result, status) {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          var detailAddr = !!result[0].road_address\r\n            ? '<div>도로명주소 : ' +\r\n              result[0].road_address.address_name +\r\n              '</div>'\r\n            : '';\r\n          detailAddr +=\r\n            '<div>지번 주소 : ' + result[0].address.address_name + '</div>';\r\n\r\n          var content =\r\n            '<div class=\"bAddr\">' +\r\n            '<span class=\"title\">선택한 주소</span>' +\r\n            detailAddr +\r\n            '</div>';\r\n\r\n          //console.log('지번주소:', result[0].address.address_name);\r\n          let address = result[0].address.address_name;\r\n          setAdd({ ...clickedAdd, address: address });\r\n\r\n          marker.setPosition(mouseEvent.latLng);\r\n          marker.setMap(map);\r\n\r\n          infowindow.setContent(content);\r\n          infowindow.open(map, marker);\r\n        }\r\n      });\r\n    });\r\n\r\n    kakao.maps.event.addListener(map, 'idle', function () {\r\n      searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n    });\r\n\r\n    function searchAddrFromCoords(coords, callback) {\r\n      geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);\r\n    }\r\n\r\n    function searchDetailAddrFromCoords(coords, callback) {\r\n      geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);\r\n    }\r\n\r\n    function displayCenterInfo(result, status) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        var infoDiv = document.getElementById('centerAddr');\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"addmap\">\r\n        <form className=\"mapForm\" onSubmit={submitMap}>\r\n          <div className=\"eleTitle\">위치</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"addform\"\r\n            name=\"findAddress\"\r\n            placeholder=\"주소를 검색해 보세요\"\r\n            onChange={changeAdd}\r\n          />\r\n          <Button onClick={findAdd}>검색</Button>\r\n\r\n          <div\r\n            className=\"map\"\r\n            id=\"map\"\r\n            style={{ width: '1000px', height: '400px' }}\r\n          ></div>\r\n          {nullAddCheck && (\r\n            <div className=\"addMapNull\">주소를 클릭하여 선택해주세요!</div>\r\n          )}\r\n          <div className=\"eleTitle\">회사이름</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"addform\"\r\n            placeholder=\"회사이름을 입력\"\r\n            name=\"bizName\"\r\n            onChange={changeValue}\r\n          />\r\n          {nullNameCheck && (\r\n            <div className=\"addMapNull\">회사이름을 입력해 주세요</div>\r\n          )}\r\n          <div className=\"eleTitle\">내용</div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"addform\"\r\n            placeholder=\"내용 한줄 입력해 주세요\"\r\n            name=\"content\"\r\n            onChange={changeValue}\r\n          />\r\n          {nullConCheck && (\r\n            <div className=\"addMapNull\">내용을 입력해 주세요</div>\r\n          )}\r\n          <div className=\"eleTitle\">날짜</div>\r\n          <div className=\"interviewDate\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"addform\"\r\n              name=\"interviewDate\"\r\n              onChange={changeValue}\r\n            />\r\n          </div>\r\n\r\n          {/*  <input\r\n            type=\"text\"\r\n            class=\"addform\"\r\n            name=\"address\"\r\n            value={nullAddCheck ? clickedAdd.address : '맵을 클릭하여 주소입력'}\r\n            disabled\r\n          /> */}\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-lg subBtn\"\r\n            value=\"등록\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMapInfo;\r\n","import React from 'react';\r\n\r\nconst Bye = () => {\r\n  return <div>bye!</div>;\r\n};\r\n\r\nexport default Bye;\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../../css/deleteForm.css';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst DeleteForm = (props) => {\r\n  const id = props.match.params.id;\r\n  const [map, setMap] = useState({\r\n    address: '',\r\n    bizName: '',\r\n    content: '',\r\n    interviewDate: '',\r\n  });\r\n\r\n  const deleteMap = () => {\r\n    if (window.confirm('정말로 삭제 하시겠습니까?')) {\r\n      axios\r\n        .delete(`https://tobedeployed.herokuapp.com/api/map/${id}`)\r\n        .then((res) => {\r\n          //console.log(res.data);\r\n          if (res.status === 200) {\r\n            props.history.push(`/`);\r\n          } else {\r\n            alert('삭제 실패');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          //console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://tobedeployed.herokuapp.com/api/map/one/${id}`)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setMap(res.data);\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"deleteForm\">\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>주소</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            name=\"address\"\r\n            value={map.address}\r\n            disabled\r\n          />\r\n          <Form.Label>회사이름</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            name=\"bizName\"\r\n            value={map.bizName}\r\n            disabled\r\n          />\r\n          <Form.Label>내용</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            name=\"content\"\r\n            value={map.content}\r\n            disabled\r\n          />\r\n          <Form.Label>날짜</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            placeholder=\"Enter username\"\r\n            name=\"interviewDate\"\r\n            value={map.interviewDate}\r\n            disabled\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <Button onClick={deleteMap}>삭제</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteForm;\r\n","import React from 'react';\r\nimport '../css/body.css';\r\nconst Body = () => {\r\n  return (\r\n    <div className=\"mainBody\">\r\n      <h2>취업성공을 위한 할 일 관리 프로젝트</h2>\r\n      <hr />\r\n      <div className=\"youtuVideo\">\r\n        <iframe\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src=\"https://www.youtube.com/embed/jbQZ4RCRKPg\"\r\n          title=\"YouTube video player\"\r\n          frameborder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowfullscreen\r\n        ></iframe>\r\n      </div>\r\n      <div className=\"githubLink\">\r\n        <a href=\"http://www.github.com/youss95/ToBeEmployed\">Github</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import './App.css';\r\nimport Header from './layout/Header';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport ProjectItem from './components/Projects/ProjectItem';\r\nimport ProjectTask from './components/Tasks/ProjectTask';\r\nimport AddTaskForm from './components/Tasks/AddTaskForm';\r\nimport UpdateTaskForm from './components/Tasks/UpdateTaskForm';\r\nimport AddTodoForm from './components/Todo/AddTodoForm';\r\nimport Todo from './components/Todo/Todo';\r\nimport UpdateTodo from './components/Todo/UpdateTodo';\r\nimport LoginForm from './components/users/LoginForm';\r\nimport RegisterForm from './components/users/RegisterForm';\r\nimport { login } from './store';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport MyMap from './components/map/MyMap';\r\nimport AddMapInfo from './components/map/AddMapInfo';\r\nimport Bye from './components/users/Bye';\r\nimport DeleteForm from './components/map/DeleteForm';\r\nimport MainTodo from './components/users/MainTodo';\r\nimport Body from './layout/Body';\r\nfunction App(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let jwtTokenTemp = localStorage.getItem('Authorization');\r\n\r\n    if (jwtTokenTemp !== null) {\r\n      console.log('fddf');\r\n      dispatch(login());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Route path=\"/\" exact={true} component={Body} />\r\n      <Route path=\"/todo\" exact={true} component={ProjectItem} />\r\n      <Route\r\n        path=\"/todo/:category/:userId\"\r\n        exact={true}\r\n        component={ProjectTask}\r\n      />\r\n      <Route path=\"/addTask/:category\" exact={true} component={AddTaskForm} />\r\n      <Route path=\"/updateTask/:id\" exact={true} component={UpdateTaskForm} />\r\n      <Route path=\"/addTodo/:id\" exact={true} component={AddTodoForm} />\r\n      <Route path=\"/list/detail/:id\" exact={true} component={Todo} />\r\n      <Route path=\"/user/login\" exact={true} component={LoginForm} />\r\n      <Route path=\"/user/register\" exact={true} component={RegisterForm} />\r\n      <Route path=\"/map/:userId\" exact={true} component={MyMap} />\r\n      <Route path=\"/mapInfo/add\" exact={true} component={AddMapInfo} />\r\n      <Route path=\"/bye\" exact={true} component={Bye} />\r\n      <Route path=\"/map/deleteForm/:id\" exact={true} component={DeleteForm} />\r\n      <Route\r\n        path=\"/todo/update/:task_id/:id\"\r\n        exact={true}\r\n        component={UpdateTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './store';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}